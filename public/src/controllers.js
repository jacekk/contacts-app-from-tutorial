// Generated by CoffeeScript 1.8.0
(function() {
  angular.module('ContactsApp').controller('ListController', function($scope, $rootScope, Contact, $location, options) {
    $rootScope.PAGE = 'all';
    $scope.contacts = Contact.query();
    $scope.fields = ['firstName', 'lastName'].concat(options.displayedFields);
    $scope.sort = function(field) {
      $scope.sort.field = field;
      $scope.sort.order = !$scope.sort.order;
    };
    $scope.sort.field = 'firstName';
    $scope.sort.order = false;
    $scope.show = function(id) {
      $location.url("/contact/" + id);
    };
  }).controller('NewController', function($scope, $rootScope, Contact, $location, $timeout) {
    $rootScope.PAGE = 'new';
    $scope.contact = new Contact({
      firstName: ['', 'text'],
      lastName: ['', 'text'],
      email: ['', 'email'],
      homePhone: ['', 'tel'],
      cellPhone: ['', 'tel'],
      birthday: ['', 'date'],
      website: ['', 'url'],
      address: ['', 'text']
    });
    $scope.save = function() {
      if ($scope.newContact.$invalid) {
        $scope.$broadcast('record:invalid');
      } else {
        $scope.contact.$save({
          responseType: 'json'
        });
        $timeout(function() {
          $location.url('/contacts');
        }, 100);
      }
    };
  }).controller('SingleController', function($scope, $rootScope, Contact, $location, $routeParams) {
    $rootScope.PAGE = 'single';
    $scope.contact = Contact.get({
      id: $routeParams.id
    });
    $scope.remove = function() {
      $scope.contact.$delete().then(function(data) {
        $location.url('/contacts');
      });
    };
  }).controller('SettingsController', function($scope, $rootScope, options, Fields) {
    $rootScope.PAGE = 'settings';
    $scope.allFields = [];
    $scope.fields = options.displayedFields;
    Fields.headers().then(function(data) {
      $scope.allFields = data;
    });
    $scope.toggle = function(field) {
      var index;
      index = options.displayedFields.indexOf(field);
      if (index > -1) {
        options.displayedFields.splice(index, 1);
      } else {
        options.displayedFields.push(field);
      }
      Fields.set(options.displayedFields);
    };
  });

}).call(this);
